.header {
  background-color: $color-grey-dark-1;
  grid-column: full-start / col-end 6;
  background-image: linear-gradient(rgba($color-secondary, .9), rgba($color-secondary, .9)), 
                    url(../img/hero.jpeg);
  background-size: cover;
  background-position: center;
  padding: 4rem 8rem 8rem 8rem;

  display: grid;           // convert the 'header' Grid item also into a Grid container
  grid-template-rows: 1fr min-content 6rem 1fr; 
  //grid-template-columns: max-content; // NOT use all available space: just the size to fit the content
  grid-template-columns: minmax(min-content, max-content);
  grid-row-gap: 1.5rem;
  justify-content: center; // align entire tracks horizontally to the grid container (default 'start')

  &__logo {
    height: 3rem;
    justify-self: center; // align this Grid item horizontally inside its Grid area (1 grid cell)
  }

  &__btn {
    justify-self: start;  // align this Grid item horizontally inside its Grid area (1 grid cell)
    align-self: start;    // align this Grid item vertically inside its Grid area (1 grid cell)
  }

  &__seenon-text {
    display: grid;
    grid-template-columns: 1fr max-content 1fr; // Grid to have 3 columns
    grid-column-gap: 1.5rem;
    align-items: center;   // align all its Grid items vertically inside their Grid area (1 grid cell)

    font-size: 1.6rem;
    color: $color-grey-light-2;

    &::before, &::after {  // pseudo-elements are also Grid items
      content: "";
      display: block;
      height: 1px;
      background-color: currentColor;
    }
  }

  &__seenon-logos {
    display: grid;
    grid-template-columns: repeat(4, 1fr);    // Grid to have 4 equally sized columns
    grid-column-gap: 3rem;
    justify-items: center; // align all its Grid items horizontally inside their Grid area (1 grid cell)

    // With flexbox
    //display: flex;
    //justify-content: space-around;

    img {
      height: 2.5rem;
      filter: brightness(75%); // Make images slightly darker 
    }
  }
}