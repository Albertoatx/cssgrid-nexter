.gallery {
  background-color: $color-grey-light-1;
  grid-column: full-start / full-end;

  display: grid;   // 'gallery' Grid Item to be also a Grid Container of 7 rows, 8 columns
  //grid-template-rows: repeat(7, 1fr); 
  grid-template-rows: repeat(7, 5vw);    // 'vw' to maintain images aspect ratio fine
  grid-template-columns: repeat(8, 1fr);
  grid-gap: 1.5rem;
  padding: 1.5rem;  // simulate as if the gap was also on the outside of the grid

  &__item {

    &--1 {          // position image1 (row1-row2 | column1-column2). Grid area = 4 Grid cells
      grid-row: 1 / span 2;    
      grid-column: 1 / span 2;
    }

    &--2 {          // position image2 (row1-row3 | column3-column5). Grid area = 6 Grid cells
      grid-row: 1 / span 3;    
      grid-column: 3 / span 3;
    }

    &--3 {          // position image3 (row1-row2 | column6). Grid area = 2 Grid cells
      grid-row: 1 / span 2;    
      grid-column: 6 / span 1;
    }

    &--4 {          // position image4 (row1-row2 | column7-column8). Grid area = 4 Grid cells
      grid-row: 1 / span 2;    
      grid-column: 7 / span 2;
    }

    &--5 {          // position image5 (row3-row5 | column1-column2). Grid area = 6 Grid cells
      grid-row: 3 / span 3;    
      grid-column: 1 / span 2;
    }

    &--6 {          // position image6 (row4-row5 | column3-column4). Grid area = 4 Grid cells
      grid-row: 4 / span 2;    
      grid-column: 3 / span 2;
    }

    &--7 {          // position image7 (row4 | column5). Grid area = 1 Grid cell
      grid-row: 4 / span 1;    
      grid-column: 5 / span 1;
    }

    &--8 {          // position image8 (row3-row4 | column6-column7). Grid area = 4 Grid cells
      grid-row: 3 / span 2;    
      grid-column: 6 / span 2;
    }

    &--9 {          // position image9 (row3-row5 | column8). Grid area = 3 Grid cells
      grid-row: 3 / span 3;    
      grid-column: 8 / span 1;
    }

    &--10 {          // position image10 (row6-row7 | column1). Grid area = 2 Grid cells
      grid-row: 6 / span 2;    
      grid-column: 1 / span 1;
    }

    &--11 {          // position image11 (row6-row7 | column2-column3). Grid area = 4 Grid cells
      grid-row: 6 / span 2;    
      grid-column: 2 / span 2;
    }

    &--12 {          // position image12 (row6-row7 | column4). Grid area = 2 Grid cells
      grid-row: 6 / span 2;    
      grid-column: 4 / span 1;
    }

    &--13 {          // position image13 (row5-row7 | column5-column7). Grid area = 6 Grid cells
      grid-row: 5 / span 3;    
      grid-column: 5 / span 3;
    }

    &--14 {          // position image14 (row6-row7 | column8). Grid area = 2 Grid cells
      grid-row: 6 / span 2;    
      grid-column: 8 / span 1;
    }

  }

  &__img {
    object-fit: cover; // Every image to fit exactly its grid cell. Must define width + height
      width: 100%;
      height: 100%;
    object-position: 100% 100%; // Image cropped both on top and bottom (before only on top)
    display: block;             // Remove the weird small whitespace after image 
  }
}